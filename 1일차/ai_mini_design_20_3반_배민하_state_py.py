# -*- coding: utf-8 -*-
"""ai_mini_design_20_3반_배민하_state.py.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1OJ7IpsY63Q4mFRuBbnrYSrSbaC8smQyw
"""

from typing import List, Dict, Any, TypedDict, Optional
from langgraph.graph.message import add_messages

# 공통: 정보 출처 및 신뢰도 (아키텍처 보완점 2)
class SourceInfo(TypedDict):
    source_url_or_doc: str # 정보 출처 (URL, 문서명 등)
    retrieved_content_snippet: str # 실제 참조된 내용 일부
    # ai_confidence_score: Optional[float] # AI가 판단한 해당 정보의 신뢰도 (0.0 ~ 1.0) - 선택적 확장

# "기존 설계 PDF"의 평가 기준 및 가중치를 참고하여 각 전문 에이전트 결과 정의
class TechEvaluationOutput(TypedDict):
    # 제품/기술력 (기존 가중치 15%)
    originality_score: Optional[float] # 독창성 점수 (1-5점 척도 등)
    originality_comment: str
    feasibility_score: Optional[float] # 구현 가능성 점수
    feasibility_comment: str
    patent_info: Optional[str] # 관련 특허 정보 (발견 시)
    tech_stack_summary: Optional[str]
    sources: List[SourceInfo]

class MarketEvaluationOutput(TypedDict):
    # 시장성 (기존 가중치 25%)
    market_size_score: Optional[float] # 시장 크기 점수
    market_size_comment: str
    growth_potential_score: Optional[float] # 성장 가능성 점수
    growth_potential_comment: str
    # 경쟁 우위 (기존 가중치 10%) - 시장 분석과 밀접
    competitive_landscape_summary: str # 경쟁 환경 요약
    entry_barriers_comment: Optional[str] # 진입 장벽 분석
    network_effects_comment: Optional[str] # 네트워크 효과 분석
    sources: List[SourceInfo]

class TeamEvaluationOutput(TypedDict):
    # 창업자 (기존 가중치 30%)
    founder_expertise_score: Optional[float] # 전문성 점수
    founder_expertise_comment: str
    founder_communication_score: Optional[float] # 커뮤니케이션 역량 점수 (추론)
    founder_communication_comment: str
    founder_execution_score: Optional[float] # 실행력 점수 (추론)
    founder_execution_comment: str
    key_team_members_summary: Optional[str]
    sources: List[SourceInfo]

class BizModelEvaluationOutput(TypedDict):
    # 실적 (기존 가중치 10%)
    track_record_summary: str # 매출, 계약, 유저 수 등 (발견된 정보 기반)
    track_record_score: Optional[float]
    # 투자조건 (기존 가중치 10%) - 공개 정보로는 한계가 있을 수 있음
    deal_terms_comment: Optional[str] # Valuation, 지분율 등 (발견 시)
    deal_terms_score: Optional[float]
    # 추가: 사업 모델 자체에 대한 평가
    revenue_model_summary: str
    g2m_strategy_summary: Optional[str]
    sources: List[SourceInfo]

class SingleStartupDetailedAnalysis(TypedDict):
    startup_name: str
    company_overview: str # InfoScraperAgent가 수집한 회사 기본 정보 요약

    # 전문 분석 에이전트들의 결과
    tech_evaluation: TechEvaluationOutput
    market_evaluation: MarketEvaluationOutput
    team_evaluation: TeamEvaluationOutput
    biz_model_evaluation: BizModelEvaluationOutput # 실적 및 투자조건 포함

    # "기존 설계 PDF"의 가중치를 적용한 종합 점수 및 요약 (IndividualReportAggregator 또는 Supervisor가 계산 가능)
    weighted_overall_score: Optional[float]
    strength_summary: str # 주요 강점
    weakness_summary: str # 주요 약점
    opportunity_summary: str # 주요 기회
    threat_summary: str # 주요 위협 (SWOT)

    # 원본 데이터 및 참고 자료 (InfoScraper가 수집)
    scraped_urls: List[str]
    key_documents_retrieved: List[str] # RAG에 사용된 문서명 등

class AdvancedStartupEvaluationState(TypedDict):
    # --- 입력 (UserInput & Supervisor) ---
    startup_names_to_compare: List[str]  # 비교할 스타트업 이름 목록

    # (아키텍처 보완점 1: 동적 평가 기준)
    # "기존 설계 PDF"의 가중치를 기본값으로 사용하되, 사용자가 오버라이드 가능
    # 예: {'owner': 0.35, 'market_opportunity': 0.20, 'product_tech': 0.20, ...}
    user_defined_criteria_weights: Optional[Dict[str, float]]

    # --- 중간 처리 결과 ---
    # Supervisor가 관리: 각 스타트업에 대한 InfoScraper의 결과
    # 예: [{'startup_name': 'MAGO', 'raw_info': {...}}, {'startup_name': 'VONT', 'raw_info': {...}}]
    initial_scraped_data_all_startups: List[Dict[str, Any]]

    # Supervisor가 관리: 각 스타트업에 대한 상세 분석 결과 리스트
    individual_detailed_analyses: List[SingleStartupDetailedAnalysis]

    # ComparativeAnalysisAgent의 결과
    # 예: {
    #       'comparison_summary_text': "MAGO는 기술 성숙도에서, VONT는 시장 침투 전략에서 강점을 보입니다...",
    #       'side_by_side_comparison_data': {
    #           'Tech Originality Score': {'MAGO': 4.5, 'VONT': 4.0},
    #           'Market Size Score': {'MAGO': 4.0, 'VONT': 4.2}, ...
    #       },
    #       'overall_recommendation_for_investor_type_A': "MAGO (Reason: ...)",
    #       'overall_recommendation_for_investor_type_B': "VONT (Reason: ...)"
    #     }
    comparative_analysis_output: Dict[str, Any]

    # --- 최종 결과 ---
    final_comparison_report_text: str

    # --- 워크플로우 관리 및 기타 ---
    messages: Annotated[list, add_messages] # 에이전트 간 대화/로그 (LangGraph 표준)
    error_log: List[str] # 오류 발생 시 기록

    # (아키텍처 보완점 3: 사용자 피드백 루프 관련 - 선택적 확장)
    # human_intervention_needed: Optional[bool]
    # intervention_point_node_name: Optional[str]
    # intervention_message_to_user: Optional[str]
    # user_feedback_for_node: Optional[str]